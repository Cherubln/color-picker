{"version":3,"sources":["SingleColor.js","App.js","index.js"],"names":["SingleColor","rgb","weight","index","hex","useState","alert","setAlert","rgbColor","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","toast","configure","onSubmit","e","preventDefault","colors","console","log","transition","Slide","hideProgressBar","position","notify","message","type","value","onChange","target","placeholder","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA8BeA,EA5BK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAAU,EACzBC,oBAAS,GADgB,mBAC5CC,EAD4C,KACrCC,EADqC,KAE7CC,EAAWP,EAAIQ,KAAK,KACpBC,EAAQ,WAAON,GAQrB,OANAO,qBAAU,WACR,IAAIC,EAAUC,YAAW,WACvBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAEF,0BACES,UAAS,gBAAWZ,EAAQ,IAAM,eAClCa,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAT,MACxBU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IALlC,UAQE,oBAAGK,UAAU,gBAAb,UACGb,EADH,KACY,sBAAMa,UAAU,QAAhB,SAAyBT,GAAS,cAE9C,mBAAGS,UAAU,cAAb,SAA4BL,Q,+BCiCnBY,MApDf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KA0Bb,OArBAC,IAAMC,YAsBJ,qCACE,0BAASjB,UAAU,YAAnB,UACE,iDACA,uBAAMkB,SAhBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIT,IAAOJ,GAAOK,IAAI,IACnCE,EAAQM,GACRC,QAAQC,IAAIF,GACZ,MAAOX,GACPC,GAAS,GAfE,SAACD,GACPM,IAAMN,MAAMA,EAAO,CACxBc,WAAYC,IACZC,iBAAiB,EACjBC,SAAU,cAYVC,CAAOlB,EAAMmB,WAQX,UACE,uBACEC,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAACb,GAAD,OAAOV,EAASU,EAAEc,OAAOF,QACnCG,YAAY,UACZlC,UAAWU,EAAQ,QAAU,OAE/B,wBAAQoB,KAAK,SAAS9B,UAAU,MAAhC,0BAKJ,yBAASA,UAAU,SAAnB,SACGc,EAAKqB,KAAI,SAAC3B,EAAOpB,GAAR,OACR,cAAC,EAAD,2BAA6BoB,GAA7B,IAAoCpB,MAAOA,EAAOC,IAAKmB,EAAMnB,MAA3CD,YC9C5BgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae34a378.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SingleColor = ({ rgb, weight, index, hex }) => {\r\n  const [alert, setAlert] = useState(false);\r\n  const rgbColor = rgb.join(',');\r\n  const hexValue = `#${hex}`;\r\n\r\n  useEffect(() => {\r\n    let timeout = setTimeout(() => {\r\n      setAlert(false);\r\n    }, 2000);\r\n    return () => clearTimeout(timeout);\r\n  }, [alert]);\r\n  return (\r\n    <article\r\n      className={`color ${index > 10 && 'color-light'}`}\r\n      style={{ backgroundColor: `rgb(${rgbColor})` }}\r\n      onClick={() => {\r\n        setAlert(true);\r\n        navigator.clipboard.writeText(hexValue);\r\n      }}\r\n    >\r\n      <p className='percent-value'>\r\n        {weight}% <span className='alert'>{alert && 'copied'}</span>\r\n      </p>\r\n      <p className='color-value'>{hexValue}</p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default SingleColor;\r\n","import React, { useState } from 'react';\nimport SingleColor from './SingleColor';\nimport { toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Values from 'values.js';\n\nfunction App() {\n  const [color, setColor] = useState('');\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values('#617d98').all(10));\n\n  toast.configure();\n  const notify = (error) => {\n    return toast.error(error, {\n      transition: Slide,\n      hideProgressBar: true,\n      position: 'top-right',\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10);\n      setList(colors);\n      console.log(colors);\n    } catch (error) {\n      setError(true);\n      notify(error.message);\n    }\n  };\n\n  return (\n    <>\n      <section className='container'>\n        <h3>Color Generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input\n            type='text'\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n            placeholder='#617d98'\n            className={error ? 'error' : null}\n          />\n          <button type='submit' className='btn'>\n            Submit\n          </button>\n        </form>\n      </section>\n      <section className='colors'>\n        {list.map((color, index) => (\n          <SingleColor key={index} {...color} index={index} hex={color.hex} />\n        ))}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}